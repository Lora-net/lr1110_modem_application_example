##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.1.0] date: [Wed Apr 03 15:48:27 CEST 2019] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#   2020-07-27 - first version
# ------------------------------------------------

-include printing.mk

######################################
# target
######################################
EVK_TARGET = lr1110_modem_application_examples

#Choose the app to compile
TRACKER_APP = 0
LORAWAN_APP = 1
GNSS_APP = 0
WIFI_APP = 0
TX_CONTINUOUS_APP = 0
UPDATE_MODEM_APP = 0

#Choose the region to use
USE_REGION_868 = 1
USE_REGION_915 = 0


TOP_DIR = ..

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -O0

#######################################
# Git information
# Thanks to https://nullpointer.io/post/easily-embed-version-information-in-software-releases/
#######################################

GIT_VERSION := $(shell git --no-pager describe --tags --always --dirty)
GIT_COMMIT  := $(shell git rev-parse --verify HEAD)
GIT_DATE    := $(firstword $(shell git --no-pager show --date=iso-strict --format="%ad" --name-only))
BUILD_DATE  := $(shell date --iso=seconds)

EVK_TARGET_NAME = $(EVK_TARGET)_$(GIT_VERSION)

#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################

# C sources
C_SOURCES =  \
${TOP_DIR}/Src/apps/Tracker/tracker_utility.c \
${TOP_DIR}/Src/system_stm32l4xx.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_gpio.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_i2c.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_mcu.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_rng.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_rtc.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_spi.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_tmr.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_tmr_list.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_uart.c \
${TOP_DIR}/Src/smtc_hal/smtc_hal_watchdog.c \
${TOP_DIR}/Src/boards/lr1110-modem-board.c \
${TOP_DIR}/Src/boards/utilities.c \
${TOP_DIR}/Src/radio/lr1110.c \
${TOP_DIR}/Src/radio/lr1110_modem_hal.c \
${TOP_DIR}/Src/radio/lr1110_modem/src/lr1110_bootloader.c \
${TOP_DIR}/Src/radio/lr1110_modem/src/lr1110_modem_driver_version.c \
${TOP_DIR}/Src/radio/lr1110_modem/src/lr1110_modem_gnss.c \
${TOP_DIR}/Src/radio/lr1110_modem/src/lr1110_modem_lorawan.c \
${TOP_DIR}/Src/radio/lr1110_modem/src/lr1110_modem_system.c \
${TOP_DIR}/Src/radio/lr1110_modem/src/lr1110_modem_wifi.c \
${TOP_DIR}/Src/radio/wifi/wifi_scan.c \
${TOP_DIR}/Src/radio/gnss/gnss_scan.c \
${TOP_DIR}/Drivers/BSP/Components/external_supply/external_supply.c \
${TOP_DIR}/Drivers/BSP/Components/Leds/leds.c \
${TOP_DIR}/Drivers/BSP/Components/lis2de12/lis2de12.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_dma_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_dma.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ramfunc.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_gpio.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_i2c_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_i2c.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_lptim.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_tim.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_tim_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rng.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_ll_rtc.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_spi_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_spi.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_ll_spi.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart_ex.c \
${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal.c \

ifeq ($(TRACKER_APP),1)
C_SOURCES +=  \
${TOP_DIR}/Src/apps/Tracker/main_tracker.c
endif

ifeq ($(LORAWAN_APP),1)
C_SOURCES +=  \
${TOP_DIR}/Src/apps/LoRaWAN/main_lorawan.c
endif

ifeq ($(GNSS_APP),1)
C_SOURCES +=  \
${TOP_DIR}/Src/apps/gnss_test/main_test_gnss.c
endif

ifeq ($(WIFI_APP),1)
C_SOURCES +=  \
${TOP_DIR}/Src/apps/wifi_test/main_test_wifi.c
endif

ifeq ($(TX_CONTINUOUS_APP),1)
C_SOURCES +=  \
${TOP_DIR}/Src/apps/tx_continuous_test/main_test_tx_continuous.c
endif

ifeq ($(UPDATE_MODEM_APP),1)
C_SOURCES +=  \
${TOP_DIR}/Src/apps/update-firmware/update_firmware.c
endif

# ASM sources
ASM_SOURCES =  \
${TOP_DIR}/Drivers/CMSIS/Device/ST/STM32L4xx/Source/Templates/gcc/startup_stm32l476xx.s

#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CPP = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
CPP = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_FULL_LL_DRIVER \
-DSTM32L476xx \
-DUSE_HAL_DRIVER \
-DLR1110EVK \
-DMODEM_TO_MODEM \

ifeq ($(USE_REGION_868),1)
C_DEFS +=  \
-DUSE_REGION_EU868
endif

ifeq ($(USE_REGION_915),1)
C_DEFS +=  \
-DUSE_REGION_US915
endif


-DGIT_VERSION=\"$(GIT_VERSION)\" \
-DGIT_COMMIT=\"$(GIT_COMMIT)\" \
-DGIT_DATE=\"$(GIT_DATE)\" \
-DBUILD_DATE=\"$(BUILD_DATE)\"

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-I${TOP_DIR}/Drivers/BSP/Components/Leds \
-I${TOP_DIR}/Drivers/BSP/Components/external_supply \
-I${TOP_DIR}/Drivers/BSP/Components/lis2de12 \
-I${TOP_DIR}/Drivers/CMSIS/Device/ST/STM32L4xx/Include \
-I${TOP_DIR}/Drivers/CMSIS/Include \
-I${TOP_DIR}/Drivers/STM32L4xx_HAL_Driver/Inc \
-I${TOP_DIR}/Inc \
-I${TOP_DIR}/Inc/smtc_hal \
-I${TOP_DIR}/Inc/boards \
-I${TOP_DIR}/Src/radio \
-I${TOP_DIR}/Src/radio/wifi \
-I${TOP_DIR}/Src/radio/gnss \
-I${TOP_DIR}/Src/radio/lr1110_modem/src \
-I${TOP_DIR}/Src/apps/LoRaWan \
-I${TOP_DIR}/Src/apps/Tracker \
-I${TOP_DIR}/Src/apps/update_firmware \

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -std=c99

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = ${TOP_DIR}/gcc/STM32L476RGTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) --specs=nosys.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(EVK_TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: target

target: $(BUILD_DIR)/$(EVK_TARGET).elf $(BUILD_DIR)/$(EVK_TARGET).bin $(BUILD_DIR)/$(EVK_TARGET_NAME).elf $(BUILD_DIR)/$(EVK_TARGET_NAME).hex $(BUILD_DIR)/$(EVK_TARGET_NAME).bin


#######################################
# build the application
#######################################

## For the main application
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))

# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(EVK_TARGET_NAME).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/$(EVK_TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@
	
$(BUILD_DIR):
	mkdir $@

print-%  : ; @echo $* = $($*)

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
